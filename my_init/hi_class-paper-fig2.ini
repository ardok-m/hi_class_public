----------------------------
----> background parameters:
----------------------------

1a) Omega_smg is the fractional density of the scalar field today. There are three possibilities
    i)    Omega_smg unspecified or equivalently set to 0. In this case the code will
          ignore the scalar field equations and will use the standard CLASS equations
    ii)   Omega_smg has a value larger than 0 but smaller than 1. In this case you should
          leave either Omega_Lambda or Omega_fld unspecified. Then, hi_class will run
          with the scalar field equations, and Omega_Lambda or Omega_fld will be inferred
          using the closure equation (sum_i Omega_i) equals (1 + Omega_k)
    iii)  Omega_smg has a negqative value. In this case the equations for the scalar field
          will be used, you have to specify both Omega_Lambda and Omega_fld, and Omega_smg will
          be inferred by the code using the closure equation

Omega_Lambda = 0 # fractional density of the cosmological constant today
Omega_fld = 0 # fractional density of a perfect fluid today, see the "explanatory.ini" file for details on this fluid
Omega_smg = -1 # fractional density of the DE field today. If it is specified to a given value, then need to comment Omega_Lambda or Omega_fld


1c) There are two possible expansion histories of the universe currently implemented
    i)   "lcdm": fixes the expansion history to be the one predicted by a cosmological constant
    ii)  "wowa": introduces a fluid with equation of state p/rho equal to w0+wa(1-a/a0)
    This information is stored in the "expansion_model" variable. After specifying it, you have
    to provide the values for the parameters to fully specify the parametrization you chose. These
    are stored in the vector "expansion_smg"
    i)   "lcdm" -> Omega_smg (default)
    ii)  "wowa" -> Omega_smg, w0, wa

expansion_model = lcdm
#expansion_smg = 0.5 #this value will be overwritten using the closure equation. See below
# expansion_model = wowa
# expansion_smg = 0.5, -1., 0.

------------------------------
----> gravity parameters:
------------------------------


2a) The theory of gravity is described by the alpha functions at the linear level.
    There are four possible parametrizations of the alpha functions currently implemented
    i)    "propto_omega": all the alphas are proportional to the fractional density of the Dark
          Energy fluid at the background. Then, you have to provide a vector containg the
          factor of proportionality of each alpha and the initial value of the Planck Mass
    ii)   "propto_scale": all the alphas are proportional to the scale factor. Then, you have
          to provide a vector containg the factor of proportionality of each alpha and the
          initial value of the Planck Mass
    iii)  "planck_linear": this parametrization depends on one single parameter. It was used
          by the Planck collaboration in 1502.01590 (this reference provides all the details
          about this parametrization)
    iv)   "planck_exponential": this parametrization depends on two parameters. It was used
          by the Planck collaboration in 1502.01590 (this reference provides all the details
          about this parametrization)
    The parametrization you want to used is stored in the variable "gravity_model", while the
    value of the parameters is stored in the vector "parameters_smg"
    i)    "propto_omega" -> x_k, x_b, x_m, x_t, M*^2_ini (default)
    ii)   "propto_scale" -> x_k, x_b, x_m, x_t, M*^2_ini
    iii)  "planck_linear" -> Omega_0
    iv)   "planck_exponential" -> alpha_M0, beta

gravity_model = propto_omega
#parameters_smg = 1., 0., 0., 0., 1.
#parameters_smg = 1., 0.625, 0., 0., 1.
#parameters_smg = 1., 1.25, 0., 0., 1.
#parameters_smg = 1., 1.875, 0., 0., 1.
parameters_smg = 1.,2.5, 0., 0., 1.

--------------------------------
----> standard CLASS parameters:
--------------------------------

5) Here we report for completeness some parameters that are present in CLASS, see explanatory.ini
   for details.

5a) list of output spectra requested

output = tCl,pCl,lCl,mPk

5b) file name root 'root' for all output files

#root = output/hi_class-paper-fig2/b0_
#root = output/hi_class-paper-fig2/b0.625_
#root = output/hi_class-paper-fig2/b1.25_
#root = output/hi_class-paper-fig2/b1.875_
root = output/hi_class-paper-fig2/b2.5_

5c) Do you want to write a file with the input parameters you used? Do you want to write a table
    of background quantitites in a file?

write parameters = yeap
write background = yeah

5d) Verbose parameters

input_verbose = 1
background_verbose = 1
output_verbose = 1
thermodynamics_verbose = 1
perturbations_verbose = 1
spectra_verbose = 1
